
---
title: "REN: Regularization Ensemble for Portfolio Optimization"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{REN: Regularization Ensemble for Portfolio Optimization}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

```{r setup}
library(REN)
```

## Introduction

The REN package provides tools for robust portfolio optimization using regularization techniques and ensemble learning methods. It is designed to generate stable out-of-sample return predictions, particularly in the presence of strong correlations among assets. The package includes functions for data preparation, parallel processing, and portfolio analysis using various methods like Mean-Variance, James-Stein, LASSO, Ridge Regression, and Equal Weighting.

This vignette will walk you through the main functionalities of the REN package, demonstrating how to set up the environment, prepare data, and perform portfolio optimization.

## Installation

You can install the development version of the REN package from GitHub:

```{r, eval = FALSE}
#devtools::install_github("bonsook/REN")
```

## Setting Up Parallel Processing

The REN package leverages parallel processing to speed up computation, especially when dealing with large datasets or complex models. Use the `setup_parallel` function to set up parallel processing.

### Example

```{r}
# Set up parallel processing with the default number of cores or choose a specific number
cl <- setup_parallel()
```


## Preparing the Data

The `prepare_data` function is designed to help you structure your input data appropriately for portfolio optimization. This function handles various preprocessing steps, making it easier to analyze the data using the REN package.

### Example

Suppose you have a data frame `your_data` with asset returns:

```{r}
# Load the dataset (replace with your actual data path)
ff25 <- read.csv("data/FF25.csv")

# Define the date column index, start date, and end date
date_column_index <- 1  # Update this based on your data
start_date <- "19990101"  # Adjust as needed
end_date <- "20231231"  # Adjust as needed

# Prepare the data for analysis
data_prep <- prepare_data(ff25, date_column_index, start_date, end_date)
x <- data_prep$x
mon <- data_prep$mon
count <- data_prep$count
Date <- data_prep$Date

```

The `prepare_data` function processes your data, making it ready for portfolio optimization.

## Performing Portfolio Analysis

The core function of the REN package is `perform_analysis`, which performs portfolio optimization using multiple methods, including Mean-Variance (MV), James-Stein (JM), LASSO, Ridge Regression, and Equal Weighting (EW). The function calculates various performance metrics such as turnover, Sharpe ratio, volatility, and maximum drawdown.

### Example

Let's perform portfolio analysis on the prepared data:

```{r}
# Perform the portfolio analysis
result <- perform_analysis(x, mon, count, Date, num_cores)

# Accessing the results
cumulative_return_plot <- result$cumulative_return_plot
turnover_mean <- result$turnover_mean
sharpe_ratio <- result$sharpe_ratio
volatility <- result$volatility
max_drawdown <- result$max_drawdown

# Display the cumulative return plot
print(cumulative_return_plot)

```


## Once you're done with the parallel computation, remember to stop the cluster to free up resources:

```{r}
# Stop the parallel cluster
stopCluster(cl)
```

### Interpreting Results

- **Cumulative Return Plot**: Visualizes the cumulative returns of different portfolio optimization methods over time.
- **Turnover Mean**: Provides the mean turnover for each method, which is crucial for understanding transaction costs.
- **Sharpe Ratio**: Indicates the risk-adjusted return of the portfolios.
- **Volatility**: Measures the annualized volatility, helping to assess the risk associated with each portfolio.
- **Max Drawdown**: Shows the maximum observed loss from a peak to a trough, which is essential for understanding the downside risk.

## Conclusion

The REN package provides a comprehensive set of tools for robust portfolio optimization using regularization and ensemble learning methods. By following the steps outlined in this vignette, you can effectively set up your environment, prepare your data, and perform in-depth portfolio analysis.

For further information, please refer to the package documentation or explore the examples provided in this vignette.

